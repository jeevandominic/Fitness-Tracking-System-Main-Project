# Generated by Django 4.2.15 on 2025-02-02 06:05

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=50, unique=True)),
                ('phone', models.CharField(max_length=10)),
                ('dob', models.DateField()),
                ('gender', models.CharField(max_length=10)),
                ('age', models.IntegerField(blank=True, null=True)),
                ('height', models.FloatField()),
                ('weight', models.FloatField()),
                ('food_type', models.CharField(max_length=20)),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('status', models.IntegerField()),
                ('profile_picture', models.FileField(blank=True, null=True, upload_to='client_profile/')),
            ],
            options={
                'db_table': 'client',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClientFM',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('client_id', models.IntegerField()),
                ('fm_id', models.IntegerField()),
                ('client_name', models.CharField(max_length=50)),
                ('fm_name', models.CharField(max_length=50)),
                ('class_link', models.CharField(max_length=200)),
                ('timing', models.CharField(max_length=50)),
                ('status', models.IntegerField()),
                ('class_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbl_client_fm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ClientFM2',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('client_id', models.IntegerField()),
                ('fm_id', models.IntegerField()),
                ('client_name', models.CharField(max_length=50)),
                ('fm_name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tbl_clientfm2',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Designations',
            fields=[
                ('designation_id', models.AutoField(primary_key=True, serialize=False)),
                ('designation', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tbl_designations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EatingHabit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('habit', models.CharField(max_length=50)),
                ('food_item', models.CharField(max_length=50)),
                ('food_type', models.CharField(max_length=50)),
                ('intake_time', models.CharField(max_length=50)),
                ('habit_no', models.IntegerField()),
                ('intake_no', models.IntegerField()),
            ],
            options={
                'db_table': 'tbl_food_habits',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EatingHabit2',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('client_id', models.IntegerField()),
                ('fm_id', models.IntegerField()),
                ('habit_no', models.IntegerField()),
                ('status', models.IntegerField()),
                ('intake_no', models.IntegerField()),
            ],
            options={
                'db_table': 'tbl_eating_habit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('content', models.CharField(max_length=1000)),
                ('star_rating', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'tbl_feedback',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FitnessManager',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('email', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=10)),
                ('qualification_id', models.IntegerField()),
                ('designation_id', models.IntegerField()),
                ('username', models.CharField(max_length=20, unique=True)),
                ('password', models.CharField(max_length=20)),
                ('certificate_proof', models.FileField(blank=True, null=True, upload_to='certificates/')),
                ('date_joined', models.DateField(auto_now_add=True)),
                ('status', models.IntegerField()),
                ('interview_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'tbl_fitness_manager',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FMSkills',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fm_id', models.IntegerField()),
                ('gym_pic', models.FileField(blank=True, null=True, upload_to='gym_pic/')),
                ('skills', models.CharField(max_length=500)),
                ('achievements', models.CharField(max_length=500)),
                ('achievement_proof', models.FileField(blank=True, null=True, upload_to='achievement_proof/')),
                ('rating', models.FloatField(default=0)),
                ('rating_count', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'tbl_fm_skills',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FoodDatabase',
            fields=[
                ('food_id', models.AutoField(primary_key=True, serialize=False)),
                ('food_name', models.CharField(max_length=100)),
                ('calories', models.FloatField()),
                ('proteins', models.FloatField()),
                ('carbs', models.FloatField()),
                ('fats', models.FloatField()),
                ('food_type', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'tbl_food_database',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('target_type', models.CharField(max_length=50)),
                ('starting_value', models.IntegerField()),
                ('target_value', models.IntegerField()),
                ('current_value', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('no_of_days', models.IntegerField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('description', models.CharField(max_length=500)),
            ],
            options={
                'db_table': 'tbl_goal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MentalFitness',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('client_id', models.IntegerField()),
                ('fm_id', models.IntegerField()),
                ('client_name', models.CharField(max_length=50)),
                ('fm_name', models.CharField(max_length=50)),
                ('current_mood', models.CharField(max_length=1000)),
                ('distribution', models.CharField(max_length=1000)),
                ('session_link', models.CharField(max_length=500)),
                ('timing', models.CharField(max_length=50)),
                ('class_time', models.DateTimeField()),
                ('status', models.IntegerField()),
            ],
            options={
                'db_table': 'tbl_mental_fitness',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('sender_id', models.IntegerField()),
                ('receiver_id', models.IntegerField()),
                ('message_text', models.CharField(max_length=1000)),
                ('message_reply', models.CharField(max_length=1000)),
            ],
            options={
                'db_table': 'tbl_messages',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Nutrition',
            fields=[
                ('nutrition_id', models.AutoField(primary_key=True, serialize=False)),
                ('nutrition_no', models.IntegerField()),
                ('description', models.TextField()),
            ],
            options={
                'db_table': 'tbl_nutritions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.AutoField(primary_key=True, serialize=False)),
                ('plan_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('payment_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('mode', models.CharField(max_length=50)),
                ('status', models.CharField(max_length=50)),
                ('active', models.IntegerField()),
            ],
            options={
                'db_table': 'tbl_payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('plan_id', models.AutoField(primary_key=True, serialize=False)),
                ('plan_name', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('service_no', models.IntegerField()),
            ],
            options={
                'db_table': 'tbl_plans',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('starting_bmi', models.FloatField()),
                ('target_bmi', models.CharField(max_length=50)),
                ('current_bmi', models.FloatField()),
                ('current_bmi_date', models.DateField()),
            ],
            options={
                'db_table': 'tbl_progress',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Qualifications',
            fields=[
                ('qualification_id', models.AutoField(primary_key=True, serialize=False)),
                ('qualification', models.CharField(max_length=50)),
                ('certification', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'tbl_qualifications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('service_id', models.AutoField(primary_key=True, serialize=False)),
                ('service_no', models.IntegerField()),
                ('service_type', models.CharField(max_length=100)),
                ('workout_id', models.IntegerField()),
                ('nutrition_no', models.IntegerField()),
                ('description', models.TextField()),
                ('category', models.CharField(max_length=100)),
                ('day', models.IntegerField()),
            ],
            options={
                'db_table': 'tbl_services',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Workout',
            fields=[
                ('workout_id', models.AutoField(primary_key=True, serialize=False)),
                ('workout_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('body_part', models.CharField(max_length=100)),
                ('duration', models.IntegerField()),
                ('workout_image', models.FileField(blank=True, null=True, upload_to='workout_img/')),
                ('reference_video', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'tbl_workouts',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('address_line1', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=20)),
                ('contact_number', models.CharField(max_length=15)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(default=0)),
                ('product_id', models.IntegerField(default=0)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('status', models.IntegerField(default=0)),
                ('cart_number', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('quantity', models.PositiveIntegerField()),
                ('total_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('order_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Shipped', 'Shipped'), ('Delivered', 'Delivered'), ('Cancelled', 'Cancelled')], default='Pending', max_length=20)),
                ('cart_number', models.IntegerField(default=0)),
                ('address', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='App.address')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('stock', models.PositiveIntegerField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='products/')),
                ('category_id', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('added_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlists', to='App.product')),
            ],
        ),
        migrations.CreateModel(
            name='Shop_Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('razorpay_order_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_payment_id', models.CharField(blank=True, max_length=100, null=True)),
                ('razorpay_signature', models.CharField(blank=True, max_length=255, null=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('status', models.CharField(default='Pending', max_length=50)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='App.order')),
            ],
        ),
        migrations.AddField(
            model_name='order',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='App.product'),
        ),
    ]
