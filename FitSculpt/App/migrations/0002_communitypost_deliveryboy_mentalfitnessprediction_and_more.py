# Generated by Django 5.1 on 2025-03-10 11:33

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('App', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityPost',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('content', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='community_posts/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('likes', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'tbl_community_posts',
                'ordering': ['-created_at'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DeliveryBoy',
            fields=[
                ('user_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('email', models.CharField(max_length=50)),
                ('phone', models.CharField(max_length=10)),
                ('address_line1', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('section', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=6)),
                ('vehicle_type', models.CharField(max_length=20)),
                ('identity_type', models.CharField(max_length=20)),
                ('identity_proof', models.FileField(upload_to='delivery_boy/id_proofs/')),
                ('vehicle_registration', models.FileField(upload_to='delivery_boy/vehicle_docs/')),
                ('username', models.CharField(blank=True, max_length=20)),
                ('password', models.CharField(blank=True, max_length=20)),
                ('status', models.IntegerField(default=0)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'tbl_delivery_boy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MentalFitnessPrediction',
            fields=[
                ('prediction_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.IntegerField()),
                ('prediction_date', models.DateTimeField(auto_now_add=True)),
                ('physical_fitness_level', models.CharField(max_length=20)),
                ('exercise_hours', models.FloatField()),
                ('sleep_hours', models.FloatField()),
                ('diet_quality', models.CharField(max_length=20)),
                ('mental_fitness_level', models.CharField(max_length=20)),
                ('stress_level', models.CharField(max_length=20)),
                ('social_engagement_score', models.FloatField()),
                ('depression_score', models.FloatField()),
                ('anxiety_score', models.FloatField()),
                ('confidence_level', models.CharField(max_length=20)),
                ('cleverness_score', models.FloatField()),
                ('focus_level', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'tbl_mental_fitness_predictions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostComment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('post_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'tbl_post_comments',
                'ordering': ['-created_at'],
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PostLike',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('post_id', models.IntegerField()),
                ('user_id', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'tbl_post_likes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeeklyNutritionCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_start_date', models.DateField()),
                ('nutrition_completed', models.BooleanField(default=False)),
                ('completion_date', models.DateField(auto_now_add=True)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeeklyWorkoutCompletion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_start_date', models.DateField()),
                ('workout_completed', models.BooleanField(default=False)),
                ('completion_date', models.DateField(auto_now_add=True)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.RemoveField(
            model_name='cart',
            name='cart_number',
        ),
        migrations.RemoveField(
            model_name='order',
            name='cart_number',
        ),
        migrations.AddField(
            model_name='order',
            name='delivery_otp',
            field=models.CharField(blank=True, max_length=6, null=True),
        ),
        migrations.AddField(
            model_name='order',
            name='otp_created_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
    ]
